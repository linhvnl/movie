{"version":3,"sources":["pages/common/NavBar.js","hooks/use-http-movie.js","pages/browse/Banner.js","pages/browse/MovieListOfType.js","pages/common/MovieTrailer.js","pages/common/MovieDetail.js","pages/browse/MovieList.js","pages/browse/Browse.jsx","hooks/use-input.js","pages/search/SearchForm.js","pages/search/ResultList.js","pages/search/Search.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","_useState","useState","_useState2","_slicedToArray","navbarClass","setNavbarClass","useEffect","document","addEventListener","window","scrollY","React","createElement","className","href","fill","aria-hidden","data-prefix","data-icon","role","xmlns","viewBox","height","d","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","useHttpMovie","origin","API_KEY","requests","fetchNetflixOriginals","concat","fetchTrending","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","endPoints","key","endPoint","urlMovieDetail","useCallback","id","urlSearch","query","originImage","fetchMovies","_ref","_asyncToGenerator","_callee","url","getData","response","data","_context","fetch","json","results","_x","_x2","apply","arguments","Banner","bannerMovie","setBannerMovie","_useHttpMovie","bannerFetch","randomMovie","Math","floor","random","style","backgroundImage","backdrop_path","backgroundSize","textShadow","String","overview","MovieListOfType","props","movies","setMovies","keyType","onMovieDetail","typeTitle","content","map","movie","srcImg","poster_path","alt","title","src","onClick","MovieTrailer","trailerKey","setTrailerKey","_step","firstTrailerKey","firstTeaserKey","_iterator","_createForOfIteratorHelper","item","site","err","Fragment","YouTube","videoId","opts","width","playerVars","autoplay","srcBackdrop","MovieDetail","release_date","vote_average","MovieList","movieDetailData","setMovieDetailData","movieDetailHandler","movieData","prevMovie","first_air_date","bind","Browse","useInput","valueValidateFunc","enteredValue","setEnteredValue","_useState3","_useState4","isTouched","setIsTouched","isValidValue","input","hasError","inputChangeHandler","event","target","inputBlurHandler","resetInput","isNotEmpty","trim","SearchForm","inputSearch","onSubmit","preventDefault","onGetSearchKey","onChange","onBlur","disabled","ResultList","setResults","searchKey","assign","Search","setSearchKey","App","BrowserRouter","Routes","Route","path","element","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","error","ReactDOM","render","StrictMode","getElementById","URL","process","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4e8f88b1.chunk.js","sourcesContent":["// import React/Hook/...\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n// function Component\r\nfunction NavBar() {\r\n  // tạo state cho style hiển thị background của NavBar\r\n  const [navbarClass, setNavbarClass] = useState(\r\n    \"navbar align-items-center fixed-top px-3 bg-transparent\"\r\n  );\r\n\r\n  // lắng nghe event \"scrollend\" để đổi style hiển thị background cho NavBar\r\n  useEffect(() => {\r\n    document.addEventListener(\"scrollend\", () => {\r\n      if (window.scrollY >= 100) {\r\n        setNavbarClass(\"navbar align-items-center fixed-top px-3 bg-dark\");\r\n      } else {\r\n        setNavbarClass(\r\n          \"navbar align-items-center fixed-top px-3 bg-transparent\"\r\n        );\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // return\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <nav className={navbarClass}>\r\n        <a className=\"text-danger text-decoration-none fw-bolder fs-4\" href=\"/\">\r\n          Movie App\r\n        </a>\r\n\r\n        {/* icon Search */}\r\n        <a href=\"/search\">\r\n          <svg\r\n            className=\"svg-inline--fa fa-search fa-w-16\"\r\n            fill=\"#ccc\"\r\n            aria-hidden=\"true\"\r\n            data-prefix=\"fas\"\r\n            data-icon=\"search\"\r\n            role=\"img\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 512 512\"\r\n            height=\"24px\"\r\n          >\r\n            <path d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"></path>\r\n          </svg>\r\n        </a>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","// import React/Hook/...\r\nimport { useCallback } from \"react\";\r\n\r\n// function custom hook\r\n// => tạo object chứa endPoints đầy đủ và các phương thức để fetch API từ THE MOVIE DATABASE API\r\nconst useHttpMovie = () => {\r\n  //________________________________\r\n  // mẫu url \"https://api.themoviedb.org/3/movie/550?api_key=<Token>\";\r\n  // \"https://api.themoviedb.org/3/trending/all/week?api_key=4dc9bbad01754faa1d43c0c6900a45d1&language=en-US\";\r\n  const origin = \"https://api.themoviedb.org/3\";\r\n  const API_KEY = \"4dc9bbad01754faa1d43c0c6900a45d1\";\r\n  const originImage = \"https://image.tmdb.org/t/p/w500\";\r\n\r\n  //________________________________\r\n  // các trường cần lấy dữ liệu về movies theo các type\r\n  const requests = {\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n    // fetchSearch: `/search/movie?api_key=${API_KEY}&language=en-US`,\r\n  };\r\n\r\n  //________________________________\r\n  // tạo object chứa endPoints đầy đủ về movies theo các type\r\n  let endPoints = {};\r\n  for (const key in requests) {\r\n    const endPoint = origin + requests[key];\r\n    endPoints[key] = endPoint;\r\n  }\r\n\r\n  //________________________________\r\n  // phương thức tạo URL để fetch chi tiết video của 1 movie\r\n  // tìm video https://api.themoviedb.org/3/movie/{movie_id}/videos?api_key=<api_key>\r\n  const urlMovieDetail = useCallback(function (id) {\r\n    const url = origin + \"/movie/\" + id + \"/videos?api_key=\" + API_KEY;\r\n    return url;\r\n  }, []);\r\n\r\n  //________________________________\r\n  // phương thức tạo URL để fetch movies theo từ khóa Search\r\n  // https://api.themoviedb.org/3/search/movie?api_key=4dc9bbad01754faa1d43c0c6900a45d1&language=en-US&query=batman\r\n  const urlSearch = useCallback(function (query) {\r\n    const url =\r\n      origin +\r\n      \"/search/movie?api_key=\" +\r\n      API_KEY +\r\n      \"&language=en-US&query=\" +\r\n      query;\r\n    return url;\r\n  }, []);\r\n\r\n  //________________________________\r\n  // phương thức để fetch tìm nạp dữ liệu movie\r\n  const fetchMovies = useCallback(async function (url, getData) {\r\n    // tìm nạp movies\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n\r\n    // lấy dữ liệu là trường data.results là 1 array chứa nhiều object (1 movie)\r\n    getData(data.results);\r\n  }, []);\r\n\r\n  //________________________________\r\n  // return về 1 object\r\n  return { endPoints, originImage, fetchMovies, urlMovieDetail, urlSearch };\r\n};\r\n\r\nexport default useHttpMovie;\r\n","// import React/Hook/...\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n// import custom hook\r\nimport useHttpMovie from \"../../hooks/use-http-movie\";\r\n\r\n// function Component\r\nfunction Banner() {\r\n  // state để lấy movies sau fetch\r\n  const [bannerMovie, setBannerMovie] = useState([]);\r\n\r\n  // dùng endPoints\r\n  const { endPoints, originImage, fetchMovies } = useHttpMovie();\r\n  const bannerFetch = endPoints.fetchNetflixOriginals;\r\n\r\n  // fetch movies 1 lần đầu tiên khi tải trang\r\n  useEffect(() => {\r\n    const chooseBannerMovie = function (data) {\r\n      // chọn movie hiển thị ngẫu nhiên cho Banner\r\n      const randomMovie = data[Math.floor(Math.random() * data.length)];\r\n      setBannerMovie(randomMovie);\r\n    };\r\n\r\n    fetchMovies(bannerFetch, chooseBannerMovie);\r\n  }, [bannerFetch, fetchMovies]);\r\n\r\n  // return\r\n  return (\r\n    <div\r\n      className=\"container-fluid px-4\"\r\n      style={{\r\n        height: \"400px\",\r\n        backgroundImage: `url(${originImage + bannerMovie.backdrop_path})`,\r\n        backgroundSize: \"cover\",\r\n      }}\r\n    >\r\n      <div className=\"d-flex flex-column justify-content-center text-light w-25 h-100 pt-5\">\r\n        <h1\r\n          className=\"fw-bolder mt-5\"\r\n          style={{ textShadow: \"1px 1px 4px black\" }}\r\n        >\r\n          {bannerMovie.name}\r\n        </h1>\r\n        <div className=\"mt-4 mb-2\">\r\n          <button type=\"button\" className=\"btn btn-secondary px-4 py-0 mx-2\">\r\n            Play\r\n          </button>\r\n          <button type=\"button\" className=\"btn btn-secondary px-4 py-0 mx-2\">\r\n            My List\r\n          </button>\r\n        </div>\r\n        <p style={{ textShadow: \"1px 1px 4px black\" }}>\r\n          {String(bannerMovie.overview).slice(0, 150)}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","// import React/Hook/...\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n// function Component cho list movies theo 1 type cụ thể\r\nfunction MovieListOfType(props) {\r\n  //________________________\r\n  // state để lấy movies sau fetch\r\n  const [movies, setMovies] = useState(\"\");\r\n\r\n  // dùng các props truyền vào\r\n  const { keyType, type, endPoint, originImage, fetchMovies, onMovieDetail } =\r\n    props;\r\n\r\n  // tên tiêu đề type hiển thị từng loại movie\r\n  const typeTitle = {\r\n    fetchNetflixOriginals: \"\",\r\n    fetchTrending: \"Xu hướng\",\r\n    fetchTopRated: \"Xếp hạng cao\",\r\n    fetchActionMovies: \"Hành động\",\r\n    fetchComedyMovies: \"Hài\",\r\n    fetchHorrorMovies: \"Kinh dị\",\r\n    fetchRomanceMovies: \"Lãng mạn\",\r\n    fetchDocumentaries: \"Tài liệu\",\r\n  };\r\n\r\n  //________________________\r\n  // fetch movies 1 lần đầu tiên khi tải trang\r\n  useEffect(() => {\r\n    fetchMovies(endPoint, setMovies);\r\n  }, [fetchMovies, endPoint]);\r\n\r\n  //________________________\r\n  // nội dung movies hiển thị sau khi fetch được dữ liệu\r\n  let content = null;\r\n  if (movies) {\r\n    // kích thước hình ảnh hiển thị tùy theo Poster/Backdrop\r\n    const style = type === \"poster\" ? { height: \"240px\" } : { height: \"150px\" };\r\n\r\n    // nội dung hiển thị\r\n    content = movies.map((movie) => {\r\n      // loại hình hiển thị tùy theo Poster/Backdrop\r\n      const srcImg =\r\n        type === \"poster\"\r\n          ? originImage + movie.poster_path\r\n          : originImage + movie.backdrop_path;\r\n      return (\r\n        <div key={movie.id} className=\"p-0 me-3\">\r\n          <img\r\n            alt={movie.title}\r\n            src={srcImg}\r\n            style={style}\r\n            className=\"movie-item\"\r\n            onClick={() =>\r\n              onMovieDetail(movie, originImage + movie.backdrop_path)\r\n            }\r\n          ></img>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  //________________________\r\n  // return\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {/* tiêu đề từng type list */}\r\n      {typeTitle[keyType] && (\r\n        <h2 className=\"text-light mb-3\">{typeTitle[keyType]}</h2>\r\n      )}\r\n      <div className=\"d-flex flex-nowrap overflow-scroll px-2 pb-3 movies-type-scroll\">\r\n        {content && content}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieListOfType;\r\n","// import React/Hook/...\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport YouTube from \"react-youtube\";\r\n\r\n// import custom hook\r\nimport useHttpMovie from \"../../hooks/use-http-movie\";\r\n\r\n// function Component\r\nfunction MovieTrailer(props) {\r\n  //_____________________________\r\n  // state để lấy trailer movie sau fetch\r\n  const [trailerKey, setTrailerKey] = useState(\"\");\r\n\r\n  // dùng hàm tạo url và fetch dữ liệu\r\n  const { fetchMovies, urlMovieDetail } = useHttpMovie();\r\n\r\n  //_____________________________\r\n  // fetch trailer 1 lần đầu tiên khi render component\r\n  useEffect(() => {\r\n    const applyData = function (data) {\r\n      // check data dữ liệu có tồn tại không\r\n      if (!data || !data.length) return;\r\n\r\n      // xử lý data fetch được\r\n      let firstTrailerKey = \"\";\r\n      let firstTeaserKey = \"\";\r\n      for (const item of data) {\r\n        // check các trường dữ liệu để tìm video phù hợp đầu tiên\r\n        // site = YouTube và type = \"Trailer\" (ưu tiên hơn) /\"Teaser\"\r\n        if (firstTrailerKey) break;\r\n        if (item.site !== \"YouTube\") continue;\r\n        if (item.type === \"Trailer\") {\r\n          firstTrailerKey = item.key;\r\n          continue;\r\n        }\r\n        if (item.type === \"Teaser\") firstTeaserKey = item.key;\r\n      }\r\n\r\n      // lưu dữ liệu vào biến state\r\n      setTrailerKey(firstTrailerKey || firstTeaserKey);\r\n    };\r\n\r\n    fetchMovies(urlMovieDetail(props.id), applyData);\r\n  }, [fetchMovies, urlMovieDetail, props.id]);\r\n\r\n  //_____________________________\r\n  // return về video trailer\r\n  return (\r\n    <Fragment>\r\n      {trailerKey ? (\r\n        <YouTube\r\n          videoId={trailerKey}\r\n          opts={{\r\n            height: \"400\",\r\n            width: \"100%\",\r\n            playerVars: {\r\n              autoplay: 0,\r\n            },\r\n          }}\r\n        />\r\n      ) : (\r\n        <img\r\n          alt={props.title}\r\n          src={props.srcBackdrop}\r\n          style={{ height: \"400px\" }}\r\n        ></img>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default MovieTrailer;\r\n","// import React/Hook/...\r\nimport React from \"react\";\r\n\r\n// import Component\r\nimport MovieTrailer from \"./MovieTrailer\";\r\n\r\n// function Component\r\nfunction MovieDetail(props) {\r\n  // return\r\n  return (\r\n    <div className=\"container-fluid mt-5\" style={{}}>\r\n      <div className=\"row row-cols-2\">\r\n        {/* nội dung movie */}\r\n        <div className=\"col text-light pt-3 px-5\">\r\n          <h1 className=\"fw-bolder border-bottom pb-4 mb-3\">{props.title}</h1>\r\n          <p className=\"fw-bolder fs-5 mb-0\">\r\n            Release Date: {props.release_date}\r\n          </p>\r\n          <p className=\"fw-bolder fs-5 mb-2\">Vote: {props.vote_average} / 10</p>\r\n          <p>{props.overview}</p>\r\n        </div>\r\n\r\n        {/* video trailer */}\r\n        <div className=\"col\">\r\n          <MovieTrailer\r\n            id={props.id}\r\n            title={props.title}\r\n            srcBackdrop={props.srcBackdrop}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieDetail;\r\n","// import React/Hook/...\r\nimport React, { useState } from \"react\";\r\n\r\n// import custom hook\r\nimport useHttpMovie from \"../../hooks/use-http-movie\";\r\n\r\n// import Component\r\nimport MovieListOfType from \"./MovieListOfType\";\r\nimport MovieDetail from \"../common/MovieDetail\";\r\n\r\n// function Component list tổng của các list theo type\r\nfunction MovieList() {\r\n  //________________________\r\n  // state để gọi hiển thị 1 movie chi tiết\r\n  const [movieDetailData, setMovieDetailData] = useState({});\r\n\r\n  //________________________\r\n  // dùng Custom Hook xử lý Request\r\n  // các type endPoints: fetchTrending - fetchNetflixOriginals - fetchTopRated - fetchActionMovies - fetchComedyMovies - fetchHorrorMovies - fetchRomanceMovies - fetchDocumentaries - fetchSearch\r\n  const { endPoints, originImage, fetchMovies } = useHttpMovie();\r\n\r\n  //________________________\r\n  // function để lấy dữ liệu để xem 1 movie chi tiết\r\n  // keyType là tên thuộc tính của loại phim (ví dụ fetchTrending, ..)\r\n  const movieDetailHandler = function (key, movieData, srcBackdrop) {\r\n    setMovieDetailData((prevMovie) => {\r\n      if (prevMovie.id === movieData.id) return {};\r\n      return {\r\n        keyType: key,\r\n        id: movieData.id,\r\n        title: movieData.title || movieData.name,\r\n        release_date: movieData.release_date || movieData.first_air_date,\r\n        vote_average: movieData.vote_average,\r\n        overview: movieData.overview,\r\n        srcBackdrop,\r\n      };\r\n    });\r\n  };\r\n\r\n  //________________________\r\n  // tạo list các movies theo từng type\r\n  const content = [];\r\n  for (const key in endPoints) {\r\n    const item = (\r\n      <div key={key} className=\"pt-3 mb-5\">\r\n        <MovieListOfType\r\n          keyType={key}\r\n          type={key === \"fetchNetflixOriginals\" ? \"poster\" : \"backdrop\"}\r\n          endPoint={endPoints[key]}\r\n          originImage={originImage}\r\n          fetchMovies={fetchMovies}\r\n          onMovieDetail={movieDetailHandler.bind(null, key)}\r\n        />\r\n\r\n        {/* hiển thị movie chi tiết */}\r\n        {movieDetailData.keyType === key && (\r\n          <MovieDetail {...movieDetailData} />\r\n        )}\r\n      </div>\r\n    );\r\n    content.push(item);\r\n  }\r\n\r\n  //________________________\r\n  // return\r\n  return <div className=\"px-3 pt-4 pb-5\">{content}</div>;\r\n}\r\n\r\nexport default MovieList;\r\n","// import React/Hook/...\nimport React from \"react\";\n\n// import Component\nimport NavBar from \"../common/NavBar\";\nimport Banner from \"./Banner\";\nimport MovieList from \"./MovieList\";\n\n// function Component\nfunction Browse() {\n  return (\n    <div className=\"bg-dark\">\n      <NavBar />\n      <Banner />\n      <MovieList />\n    </div>\n  );\n}\n\nexport default Browse;\n","import { useState } from \"react\";\n\n// valueValidateFunc là hàm xác thực cụ thể tùy component dùng Custom Hook này\n\nconst useInput = (valueValidateFunc) => {\n  // state giá trị đầu vào và state được chạm hay chưa\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n\n  // gọi valueValidateFunc và truyền value để xác thực riêng tùy component\n  const isValidValue = valueValidateFunc(enteredValue);\n  const hasError = !isValidValue && isTouched;\n\n  // khi thay đổi value đầu vào\n  const inputChangeHandler = (event) => {\n    setEnteredValue(event.target.value);\n  };\n\n  // khi đã chạm và rời khỏi đầu vào => blur\n  const inputBlurHandler = (event) => {\n    setIsTouched(true);\n  };\n\n  // đặt lại value \"rỗng\"/ban đầu chưa chạm\n  const resetInput = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  // trả lại 1 object input chứa tất cả biến/func\n  return {\n    input: {\n      enteredValue,\n      isValidValue,\n      hasError,\n      inputChangeHandler,\n      inputBlurHandler,\n      resetInput,\n    },\n  };\n};\n\nexport default useInput;\n","// import React/Hook/...\r\nimport React from \"react\";\r\n\r\n// import Custom Hook xử lý input\r\nimport useInput from \"../../hooks/use-input\";\r\n\r\n//___________________________\r\n// logic xác thực là hợp lệ: value không được rỗng\r\nconst isNotEmpty = (value) => value.trim() !== \"\";\r\n\r\n//___________________________\r\n// function Component\r\nconst SearchForm = (props) => {\r\n  // dùng Custom Hook cho mỗi đầu vào\r\n  const { input: inputSearch } = useInput(isNotEmpty);\r\n\r\n  // hàm xử lý Submit cho form\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    // submit là đã \"touch\"\r\n    inputSearch.inputBlurHandler();\r\n\r\n    // input không hợp lệ thì return\r\n    if (!inputSearch.isValidValue) return;\r\n\r\n    ///////////////////////////////\r\n    // logic muốn thực hiện khi form hợp lệ\r\n    props.onGetSearchKey(inputSearch.enteredValue);\r\n\r\n    // KHÔNG đặt lại giá trị ban đầu (reset) các input, SẼ NHẤN NÚT RESET RIÊNG\r\n    // inputSearch.resetInput();\r\n  };\r\n\r\n  //___________________________\r\n  // return\r\n  return (\r\n    <div className=\"container py-5\">\r\n      <div className=\"d-flex justify-content-center pt-5\">\r\n        <form\r\n          className=\"bg-white mt-4\"\r\n          style={{ width: \"800px\" }}\r\n          onSubmit={submitHandler}\r\n        >\r\n          <div className=\"\">\r\n            <div className=\"d-flex justify-content-between align-items-center border-bottom border-primary border-3 py-2\">\r\n              <input\r\n                className=\"form-control w-100 border-0 px-5 py-3 fs-4\"\r\n                type=\"text\"\r\n                onChange={inputSearch.inputChangeHandler}\r\n                onBlur={inputSearch.inputBlurHandler}\r\n                value={inputSearch.enteredValue}\r\n              />\r\n              <svg\r\n                className=\"svg-inline--fa fa-search fa-w-16 mx-4\"\r\n                fill=\"#ccc\"\r\n                aria-hidden=\"true\"\r\n                data-prefix=\"fas\"\r\n                data-icon=\"search\"\r\n                role=\"img\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 512 512\"\r\n                height=\"30px\"\r\n              >\r\n                <path d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"></path>\r\n              </svg>\r\n            </div>\r\n            {inputSearch.hasError && (\r\n              <p className=\"text-danger fs-5 px-3 mt-2 mb-0\">\r\n                Search must not be empty.\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          {/* button */}\r\n          <div className=\"d-flex justify-content-end py-5\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn fw-bold fs-5 px-4\"\r\n              onClick={inputSearch.resetInput}\r\n            >\r\n              RESET\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary rounded-0 fw-bold fs-5 px-4 ms-1 me-5\"\r\n              disabled={!inputSearch.isValidValue}\r\n            >\r\n              SEARCH\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","// import React/Hook/...\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n// import Custom Hook xử lý yêu cầu Search dữ liệu movie\r\nimport useHttpMovie from \"../../hooks/use-http-movie\";\r\n\r\n// import Component\r\nimport MovieDetail from \"../common/MovieDetail\";\r\n\r\n// function Component search và hiển thị kết quả movie\r\nconst ResultList = (props) => {\r\n  //_______________________________\r\n  // state để lấy movies sau fetch\r\n  const [results, setResults] = useState(null);\r\n  // state để gọi hiển thị 1 movie chi tiết\r\n  const [movieDetailData, setMovieDetailData] = useState({});\r\n\r\n  //_______________________________\r\n  // dùng Custom Hook xử lý Request\r\n  const { originImage, fetchMovies, urlSearch } = useHttpMovie();\r\n\r\n  //_______________________________\r\n  // fetch movies khi có từ khóa Search\r\n  useEffect(() => {\r\n    if (!props.searchKey) return;\r\n    fetchMovies(urlSearch(props.searchKey), setResults);\r\n  }, [fetchMovies, urlSearch, props.searchKey]);\r\n\r\n  //_______________________________\r\n  // function để lấy dữ liệu để xem 1 movie chi tiết\r\n  // keyType là tên thuộc tính của loại phim (ví dụ fetchTrending, ..)\r\n  const movieDetailHandler = function (movieData, srcBackdrop) {\r\n    setMovieDetailData((prevMovie) => {\r\n      if (prevMovie.id === movieData.id) return {};\r\n      return {\r\n        id: movieData.id,\r\n        title: movieData.title || movieData.name,\r\n        release_date: movieData.release_date || movieData.first_air_date,\r\n        vote_average: movieData.vote_average,\r\n        overview: movieData.overview,\r\n        srcBackdrop,\r\n      };\r\n    });\r\n  };\r\n\r\n  //_______________________________\r\n  // nội dung movies hiển thị sau khi fetch được dữ liệu Search\r\n  let content = null;\r\n  if (results) {\r\n    // nội dung hiển thị\r\n    content = results.map((movie) => {\r\n      return (\r\n        <div key={movie.id} className=\"col-auto\">\r\n          <img\r\n            alt={movie.title}\r\n            src={originImage + movie.poster_path}\r\n            style={{ width: \"173px\" }}\r\n            className=\"movie-item\"\r\n            onClick={() =>\r\n              movieDetailHandler(movie, originImage + movie.backdrop_path)\r\n            }\r\n          ></img>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  //_______________________________\r\n  return (\r\n    <div className=\"container-fluid pb-5\">\r\n      {/* tiêu đề*/}\r\n      {content && <h2 className=\"text-light mb-3\">Search Result</h2>}\r\n\r\n      {/* kết quả */}\r\n      {content && <div className=\"row g-4 px-4\">{content}</div>}\r\n\r\n      {/* chi tiết của 1 movie */}\r\n      {movieDetailData.id && <MovieDetail className=\"\" {...movieDetailData} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultList;\r\n","// import React/Hook/...\nimport React, { useState } from \"react\";\n\n// import Component\nimport NavBar from \"../common/NavBar\";\nimport SearchForm from \"./SearchForm\";\nimport ResultList from \"./ResultList\";\n\n// function Component\nconst Search = () => {\n  // từ khóa tìm kiếm\n  const [searchKey, setSearchKey] = useState(\"\");\n\n  // lấy từ khóa tìm kiếm (để fetch dữ liệu sau đó)\n  const getSearchKeyHandler = function (key) {\n    setSearchKey(key);\n  };\n\n  // return\n  return (\n    <div className=\"bg-dark min-vh-100 pb-5\">\n      <NavBar />\n      <SearchForm onGetSearchKey={getSearchKeyHandler} />\n      <ResultList searchKey={searchKey} />\n    </div>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport {\n\tBrowserRouter,\n\tRoutes,\n\tRoute,\n} from \"react-router-dom\";\n\nimport Browse from './pages/browse/Browse';\nimport Search from './pages/search/Search';\n\n\nfunction App() {\n\treturn (\n\t\t<BrowserRouter>\n\t\t  <Routes>\n\t\t\t<Route path=\"/\" element={<Browse/>}/>\n\t\t\t<Route path=\"/search\" element={<Search/>}/>\n\t\t  </Routes>\n\t\t</BrowserRouter>\n\t  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","// project này dùng bootstrap\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\n// thêm vài style CSS chung trong \"./index.css\"\n// 1> style for animation on hover movie-image\n// 2> style for scrollbar in lists of types in Browser Page\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}